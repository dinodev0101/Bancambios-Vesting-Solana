default:
  image: docker:19.03.12
  services:
    - name: docker:19.03.12-dind
      alias: docker

variables:
  AWS_ACCOUNT_ID: 293990802426
  AWS_REGION: eu-west-1
  AWS_REG_URL: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  IMAGE_NAME: $AWS_REG_URL/bc-bx-tge-${CI_COMMIT_REF_SLUG}-srm-vesting-fe:${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}

stages:
  - build
  # - deploy

# --- commit develop
build-develop:
  stage: build
  before_script:
    - apk add binutils curl
    - curl -sL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub
    - curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.31-r0/glibc-2.31-r0.apk
    - curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.31-r0/glibc-bin-2.31-r0.apk
    - apk add glibc-2.31-r0.apk glibc-bin-2.31-r0.apk
    - curl -sL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip &&
      unzip awscliv2.zip > /dev/null 2>&1 &&
      aws/install > /dev/null 2>&1
    - docker --version && aws --version
    - export AWS_ACCESS_KEY_ID="$AZ_AWS_ACCESS_KEY_ID"
    - export AWS_SECRET_ACCESS_KEY="$AZ_AWS_SECRET_ACCESS_KEY"
    - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_REG_URL}
  script:
    - docker build
        --build-arg APP_ENV_ARG="develop"
      -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
    - docker rmi -f $IMAGE_NAME
  tags:
    - boxxy-gitlab-runner-01

# stand-01-develop:
#   stage: deploy
#   image: williamyeh/ansible:ubuntu16.04
#   script:
#     # - apt-get update -y && apt-get install -y vim
#     - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
#     - mkdir -p ~/.ssh
#     - echo "$OPENSSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
#     - chmod 600 ~/.ssh/id_rsa
#     - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#     - eval $(ssh-agent -s)
#     - ssh-add ~/.ssh/id_rsa
#     - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#     - chmod -R 755 .ansible && cd .ansible
#     - ansible -m ping exchange-stand-01-develop
#     - ansible-playbook
#       -l develop
#       -e aws_access_key_id=$AZ_AWS_ACCESS_KEY_ID
#       -e aws_secret_access_key=$AZ_AWS_SECRET_ACCESS_KEY
#       -e aws_region=$AWS_REGION
#       -e aws_reg_url=$AWS_REG_URL
#       -e image_name=$IMAGE_NAME
#       -e server=develop
#       srm-dex-fe.yml
#   only:
#     - develop
#   tags:
#     - exchange-gitlab-runner-01-develop
# # ---

# # --- k8s
# # k8s-prod:
# #   stage: deploy
# #   image:
# #     name: lachlanevenson/k8s-kubectl:latest
# #     entrypoint: [""]
# #   script:
# #     - kubectl version --client
# #     - mkdir ~/.kube && echo $KUBECTL_CONFIG_PROD | base64 -d > ~/.kube/config
# #     - sed -i
# #       "s|{{ image_name }}|$IMAGE_NAME|g;
# #       s|{{ replicas_count }}|1|g"
# #       .kubernetes/deployment/srm-dex-fe.yaml
# #     - kubectl apply -f .kubernetes/deployment/srm-dex-fe.yaml
# #     - kubectl apply -f .kubernetes/service/srm-dex-fe.yaml
# #     - kubectl apply -f .kubernetes/ingress/srm-dex-fe.yaml
# #   only:
# #     - develop
# #   tags:
# #     - exchange-gitlab-runner-01-develop

# k8s-prod:
#   stage: deploy
#   image:
#     name: dtzar/helm-kubectl:latest
#     entrypoint: [""]
#   script:
#     - kubectl version --client
#     - helm version
#     - mkdir ~/.kube && echo $KUBECTL_CONFIG_PROD | base64 -d > ~/.kube/config
#     - helm upgrade --install $CI_PROJECT_NAME-$KIND-$CI_COMMIT_REF_SLUG ./.helm
#       --set project=$CI_PROJECT_NAME
#       --set kind=$KIND
#       --set app_env=$CI_COMMIT_REF_SLUG
#       --set environment=stage
#       --set container.image=$IMAGE_NAME
#       --set host=$HOST_URL
#       --namespace stage
#       --debug
#       --wait
#       --timeout 20m
#   only:
#     - develop
#   tags:
#     - exchange-gitlab-runner-01-develop

# k8s-rollback-prod:
#   stage: deploy
#   image:
#     name: dtzar/helm-kubectl:latest
#     entrypoint: [""]
#   script:
#     - kubectl version --client
#     - helm version
#     - mkdir ~/.kube && echo $KUBECTL_CONFIG_PROD | base64 -d > ~/.kube/config
#     - helm rollback $CI_PROJECT_NAME-$KIND-$CI_COMMIT_REF_SLUG
#       --namespace stage
#       --debug
#       --wait
#       --timeout 20m
#   when: manual
#   only:
#     - develop
#   tags:
#     - exchange-gitlab-runner-01-develop
# # ---
